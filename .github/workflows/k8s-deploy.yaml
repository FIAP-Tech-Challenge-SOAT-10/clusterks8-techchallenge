name: Kubernetes Manifests Deploy

on:
  push:
    branches: [ main ]
    paths:
      - 'k8s/**'

jobs:
  k8s-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      CLUSTER_NAME: eks-lanchonete

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Configurar credenciais AWS
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Gerar kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region ${{ env.AWS_REGION }} \
            --name ${{ env.CLUSTER_NAME }}

      - name: Criar Namespace (se não existir)
        run: |
          kubectl get ns lanchonete-app || kubectl create ns lanchonete-app

      - name: Criar Secret no cluster
        run: |
          kubectl create secret generic app-secrets \
            --namespace lanchonete-app \
            --from-literal=DB_PASS=${{ secrets.DB_PASS }} \
            --from-literal=ACCESS_TOKEN_SECRET=${{ secrets.ACCESS_TOKEN_SECRET }} \
            --from-literal=REFRESH_TOKEN_SECRET=${{ secrets.REFRESH_TOKEN_SECRET }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Aplicar Manifests Kubernetes
        run: |
          kubectl apply -f k8s/base/namespace.yaml
          kubectl apply -f k8s/apps/configmap.yaml
          kubectl apply -f k8s/apps/app-deployment.yaml
          kubectl apply -f k8s/apps/service.yaml
          kubectl apply -f k8s/redis/redis-deployment.yaml
          kubectl apply -f k8s/redis/redis-service.yaml
          kubectl apply -f k8s/webhook/webhook-deployment.yaml
          kubectl apply -f k8s/webhook/webhook-service.yaml
          kubectl apply -f k8s/webhook/webhook-ingress.yaml