name: Kubernetes Manifests Deploy

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'eks-cluster/**'

jobs:
  k8s-deploy:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      CLUSTER_NAME: eks-lanchonete

    steps:
      - uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v2.0.3
        with:
          terraform_version: 1.6.6

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Generate kubeconfig
        run: |
          aws eks update-kubeconfig \
            --region ${{ env.AWS_REGION }} \
            --name ${{ env.CLUSTER_NAME }}

      - name: Terraform Init (manifests)
        run: terraform init

      - name: Terraform Apply (manifests)
        run: terraform apply -auto-approve

      - name: Obter IP do serviço app
        run: |
          for i in {1..10}; do
            IP=$(kubectl get svc app -n lanchonete-app -o jsonpath="{.status.loadBalancer.ingress[0].ip}" 2>/dev/null)
            if [[ -n "$IP" ]]; then
              echo "✅ IP: $IP"
              echo "IP_SERVICO=$IP" >> $GITHUB_ENV
              exit 0
            fi
            echo "Tentando obter IP... ($i)"
            sleep 15
          done
          echo "❌ IP ainda indisponível."
          exit 1

      - name: Mostrar link do app
        run: echo "http://$IP_SERVICO/webhook"
