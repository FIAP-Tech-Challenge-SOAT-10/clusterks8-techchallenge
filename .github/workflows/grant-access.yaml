name: Add RBAC for juclops-tech

on:
  workflow_dispatch: # Executa manualmente

jobs:
  grant-access:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      CLUSTER_NAME: eks-lanchonete

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Instalar yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/latest/download/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq
          yq --version

      - name: Configurar credenciais AWS (OIDC)
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Configurar acesso ao cluster EKS
        run: |
          aws eks update-kubeconfig \
            --region $AWS_REGION \
            --name $CLUSTER_NAME

      - name: Adicionar juclops-tech ao aws-auth
        run: |
          # Extrai ConfigMap atual
          kubectl get configmap aws-auth -n kube-system -o yaml > aws-auth.yaml

          # Define novo usuário em YAML válido (sem indentação!)
          cat <<EOF > new-user.yaml
          - userarn: arn:aws:iam::043309328721:user/juclops-tech
            username: juclops-tech
            groups:
              - system:masters
          EOF

          # Extrai lista atual de usuários (ou cria vazia)
          yq e '.data.mapUsers // ""' aws-auth.yaml > existing-users.yaml

          # Adiciona o novo usuário ao final da lista
          cat new-user.yaml >> existing-users.yaml

          # Substitui no ConfigMap
          yq e --inplace '.data.mapUsers = str(load("existing-users.yaml"))' aws-auth.yaml

          # Aplica no cluster
          kubectl apply -f aws-auth.yaml

